{"version":3,"sources":["app.js"],"names":["document","addEventListener","audioPlayer","getElementById","playButton","querySelector","prevButton","nextButton","shuffleButton","showPlaylistButton","progressBar","musicPlayer","suggestions","refreshButton","playerCover","currentTimeDisplay","regeneratorRuntime","async","_context","prev","next","totalTimeDisplay","currentSongIndex","song","cover","currentPlaylist","name","currentPlayingItem","artist","currentSource","load","stop","playPause","paused","play","classList","replace","src","playerTitle","textContent","length","loadSong","then","shuffleSong","randomIndex","random","playlistSongs","grid","createElement","Math","add","body","appendChild","songItem","setAttribute","innerHTML","index","playAudio","event","stopPropagation","display","shuffledSongs","songs","findIndex","s","push","remove","concat","formatTime","seconds","floor","minutes","secs","newTime","value","duration","currentTime","forEach","item","albumName","albums","pause","style","setTimeout","querySelectorAll","playlistName","playlists","nextSong","progress","loadSongs","location","reload","updateProgress","window"],"mappings":"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","file":"app.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const audioPlayer = document.getElementById('audio-player');\r\n    const playButton = document.querySelector('.play i');\r\n    const prevButton = document.querySelector('.prev');\r\n    const nextButton = document.querySelector('.next');\r\n    const shuffleButton = document.querySelector('.shuffle');\r\n    const showPlaylistButton = document.querySelector('.show-playlist');\r\n    const progressBar = document.getElementById('progress');\r\n    const musicPlayer = document.querySelector('.music-player');\r\n    const suggestions = document.querySelector('.music-suggestions');\r\n    const refreshButton = document.querySelector('.refresh');\r\n\r\n    const playerCover = document.getElementById('album-cover');\r\n    const playerTitle = document.getElementById('song-name');\r\n    const playerArtist = document.getElementById('artist-name');\r\n    const currentTimeDisplay = document.getElementById('current-time');\r\n    const totalTimeDisplay = document.getElementById('total-time');\r\n\r\n    let currentSongIndex = 0;\r\n    let currentPlaylist = [];\r\n    let currentPlayingItem = null;\r\n    let currentSource = \"\";\r\n\r\n    // Hàm tải bài hát\r\n    async function loadSong(song) {\r\n        audioPlayer.src = song.src;\r\n        playerCover.src = song.cover;\r\n        playerTitle.textContent = song.name;\r\n        playerArtist.textContent = song.artist;\r\n        audioPlayer.load();\r\n    }\r\n\r\n    function playPause() {\r\n        if (audioPlayer.paused) {\r\n            audioPlayer.play();\r\n            playButton.classList.replace('fa-play', 'fa-pause');\r\n        } else {\r\n            audioPlayer.pause();\r\n            playButton.classList.replace('fa-pause', 'fa-play');\r\n        }\r\n    }\r\n\r\n    function updateProgress() {\r\n        const progress = (audioPlayer.currentTime / audioPlayer.duration) * 100;\r\n        progressBar.value = progress;\r\n    }\r\n\r\n    progressBar.addEventListener('input', () => {\r\n        const newTime = (progressBar.value / 100) * audioPlayer.duration;\r\n        audioPlayer.currentTime = newTime;\r\n    });\r\n\r\n    function nextSong() {\r\n        currentSongIndex = (currentSongIndex + 1) % currentPlaylist.length;\r\n        loadSong(currentPlaylist[currentSongIndex]).then(() => {\r\n            audioPlayer.play();\r\n            playButton.classList.replace('fa-play', 'fa-pause');\r\n        });\r\n    }\r\n\r\n    function prevSong() {\r\n        currentSongIndex = (currentSongIndex - 1 + currentPlaylist.length) % currentPlaylist.length;\r\n        loadSong(currentPlaylist[currentSongIndex]).then(() => {\r\n            audioPlayer.play();\r\n            playButton.classList.replace('fa-play', 'fa-pause');\r\n        });\r\n    }\r\n\r\n    function shuffleSong() {\r\n        let randomIndex;\r\n        do {\r\n            randomIndex = Math.floor(Math.random() * currentPlaylist.length);\r\n        } while (randomIndex === currentSongIndex);\r\n\r\n        currentSongIndex = randomIndex;\r\n        loadSong(currentPlaylist[currentSongIndex]).then(() => {\r\n            audioPlayer.play();\r\n            playButton.classList.replace('fa-play', 'fa-pause');\r\n        });\r\n    }\r\n\r\n    document.querySelectorAll('.album-item').forEach(item => {\r\n        item.addEventListener('click', () => {\r\n            const albumName = item.querySelector('h3').textContent;\r\n            if (currentSource === \"album\" && currentPlaylist === albums[albumName]) {\r\n                musicPlayer.classList.remove('visible');\r\n                audioPlayer.pause();\r\n                playButton.classList.replace('fa-pause', 'fa-play');\r\n                suggestions.style.display = 'block';\r\n                return;\r\n            }\r\n            currentSource = \"album\";\r\n            currentPlaylist = albums[albumName];\r\n            currentSongIndex = 0;\r\n            loadSong(currentPlaylist[currentSongIndex]).then(() => {\r\n                musicPlayer.classList.add('visible');\r\n                suggestions.style.display = 'none';\r\n                setTimeout(() => {\r\n                    audioPlayer.play();\r\n                    playButton.classList.replace('fa-play', 'fa-pause');\r\n                }, 500);\r\n            });\r\n        });\r\n    });\r\n\r\n    document.querySelectorAll('.playlist-item').forEach(item => {\r\n        item.addEventListener('click', () => {\r\n            const playlistName = item.querySelector('h3').textContent;\r\n            if (currentSource === \"playlist\" && currentPlaylist === playlists[playlistName]) {\r\n                musicPlayer.classList.remove('visible');\r\n                audioPlayer.pause();\r\n                playButton.classList.replace('fa-pause', 'fa-play');\r\n                suggestions.style.display = 'block';\r\n                return;\r\n            }\r\n            currentSource = \"playlist\";\r\n            currentPlaylist = playlists[playlistName];\r\n            currentSongIndex = 0;\r\n            loadSong(currentPlaylist[currentSongIndex]).then(() => {\r\n                musicPlayer.classList.add('visible');\r\n                suggestions.style.display = 'none';\r\n                setTimeout(() => {\r\n                    audioPlayer.play();\r\n                    playButton.classList.replace('fa-play', 'fa-pause');\r\n                }, 500);\r\n            });\r\n        });\r\n    });\r\n\r\n    function showSongList() {\r\n        let playlistSongs = document.querySelector('.playlist-songs');\r\n        if (!playlistSongs) {\r\n            playlistSongs = document.createElement('ul');\r\n            playlistSongs.classList.add('playlist-songs');\r\n            document.body.appendChild(playlistSongs);\r\n        }\r\n        playlistSongs.innerHTML = '';\r\n        currentPlaylist.forEach((song, index) => {\r\n            const songItem = document.createElement('li');\r\n            songItem.textContent = `${song.name} - ${song.artist}`;\r\n            songItem.addEventListener('click', () => {\r\n                currentSongIndex = index;\r\n                loadSong(currentPlaylist[currentSongIndex]).then(() => {\r\n                    audioPlayer.play();\r\n                    playButton.classList.replace('fa-play', 'fa-pause');\r\n                });\r\n            });\r\n            playlistSongs.appendChild(songItem);\r\n        });\r\n        playlistSongs.style.display = playlistSongs.style.display === 'none' ? 'block' : 'none';\r\n    }\r\n\r\n    function loadSongs() {\r\n        const grid = document.getElementById('suggestions-grid');\r\n        grid.innerHTML = '';\r\n        let shuffledSongs = [...songs].sort(() => Math.random() - 0.5);\r\n        shuffledSongs.forEach(song => {\r\n            const songItem = document.createElement('div');\r\n            songItem.classList.add('song-item');\r\n            songItem.setAttribute('data-src', song.src);\r\n            songItem.innerHTML = `\r\n                <img src=\"${song.cover}\" alt=\"${song.name}\">\r\n                <div class=\"song-info\">\r\n                    <p class=\"song-title\">${song.name}</p>\r\n                    <p class=\"artist\">${song.artist}</p>\r\n                </div>\r\n                <div class=\"play-icon\">\r\n                    <i class=\"fa-solid fa-play\"></i>\r\n                </div>\r\n            `;\r\n            songItem.addEventListener('click', () => playAudio(song));\r\n            songItem.querySelector('.play-icon').addEventListener('click', (event) => {\r\n                event.stopPropagation();\r\n                playAudio(song);\r\n            });\r\n            grid.appendChild(songItem);\r\n        });\r\n    }\r\n\r\n    function playAudio(song) {\r\n        if (currentSource !== \"songs\") {\r\n            currentSource = \"songs\";\r\n            currentPlaylist = songs;\r\n        }\r\n        currentSongIndex = currentPlaylist.findIndex(s => s.src === song.src);\r\n        if (currentSongIndex === -1) {\r\n            // Nếu bài hát không có trong playlist hiện tại, thêm vào và phát\r\n            currentPlaylist.push(song);\r\n            currentSongIndex = currentPlaylist.length - 1;\r\n        }\r\n        loadSong(currentPlaylist[currentSongIndex]).then(() => {\r\n            audioPlayer.play();\r\n            playButton.classList.replace('fa-play', 'fa-pause');\r\n            musicPlayer.classList.add('visible');\r\n            if (currentPlayingItem) {\r\n                currentPlayingItem.classList.remove('playing');\r\n            }\r\n            currentPlayingItem = document.querySelector(`.song-item[data-src=\"${song.src}\"]`);\r\n            if (currentPlayingItem) {\r\n                currentPlayingItem.classList.add('playing');\r\n            }\r\n        });\r\n    }\r\n\r\n    audioPlayer.addEventListener('ended', nextSong);\r\n    audioPlayer.addEventListener('timeupdate', () => {\r\n        updateProgress();\r\n        currentTimeDisplay.textContent = formatTime(audioPlayer.currentTime);\r\n    });\r\n\r\n    audioPlayer.addEventListener('loadedmetadata', () => {\r\n        totalTimeDisplay.textContent = formatTime(audioPlayer.duration);\r\n    });\r\n\r\n    playButton.addEventListener('click', playPause);\r\n    nextButton.addEventListener('click', nextSong);\r\n    prevButton.addEventListener('click', prevSong);\r\n    shuffleButton.addEventListener('click', shuffleSong);\r\n    showPlaylistButton.addEventListener('click', showSongList);\r\n    refreshButton.addEventListener('click', loadSongs);\r\n\r\n    const logo = document.querySelector('.logo img');\r\n    logo.addEventListener('click', () => {\r\n        location.reload();\r\n    });\r\n\r\n    function formatTime(seconds) {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const secs = Math.floor(seconds % 60);\r\n        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n    }\r\n\r\n    loadSongs();\r\n\r\n    // Expose các hàm ra global scope để chatbot gọi\r\n    window.playAudio = playAudio;\r\n    window.playPause = playPause;\r\n    window.nextSong = nextSong;\r\n    window.shuffleSong = shuffleSong;\r\n});"]}